import i from"bn.js";var e=class extends i{constructor(r,t,n){if(e.isBN(r)){super(r.toArray(),t,n);return}if(typeof r=="string"&&r.slice(0,2)==="0x"){super(r.substring(2),t||"hex",n);return}super(r,t,n)}toString(r,t){let n=super.toString(r,t);return r===16||r==="hex"?`0x${n}`:n}toHex(r){let n=(r||0)*2;if(this.isNeg())throw new Error("cannot convert negative value to hex");if(r&&this.byteLength()>r)throw new Error(`value ${this} exceeds bytes ${r}`);return this.toString(16,n)}toBytes(r){if(this.isNeg())throw new Error("cannot convert negative value to Bytes");return Uint8Array.from(this.toArray(void 0,r))}toJSON(){return this.toString(16)}add(r){return this.caller(r,"add")}pow(r){return this.caller(r,"pow")}sub(r){return this.caller(r,"sub")}div(r){return this.caller(r,"div")}mul(r){return this.caller(r,"mul")}mod(r){return this.caller(r,"mod")}divRound(r){return this.caller(r,"divRound")}lt(r){return this.caller(r,"lt")}lte(r){return this.caller(r,"lte")}gt(r){return this.caller(r,"gt")}gte(r){return this.caller(r,"gte")}eq(r){return this.caller(r,"eq")}cmp(r){return this.caller(r,"cmp")}sqr(){return new e(super.sqr().toArray())}neg(){return new e(super.neg().toArray())}abs(){return new e(super.abs().toArray())}toTwos(r){return new e(super.toTwos(r).toArray())}fromTwos(r){return new e(super.fromTwos(r).toArray())}caller(r,t){let n=super[t](new e(r));return e.isBN(n)?new e(n.toArray()):n}clone(){return new e(this.toArray())}mulTo(r,t){let n=new i(this.toArray()).mulTo(r,t);return new e(n.toArray())}egcd(r){let{a:t,b:n,gcd:s}=new i(this.toArray()).egcd(r);return{a:new e(t.toArray()),b:new e(n.toArray()),gcd:new e(s.toArray())}}divmod(r,t,n){let{div:s,mod:a}=new i(this.toArray()).divmod(new e(r),t,n);return{div:new e(s==null?void 0:s.toArray()),mod:new e(a==null?void 0:a.toArray())}}},u=(o,r,t)=>new e(o,r,t);function b(o){return u(o).toNumber()}function c(o,r){return u(o).toHex(r)}function d(o,r){return u(o).toBytes(r)}function I(...o){return o.reduce((r,t)=>u(t).gt(r)?u(t):r,u(0))}function g(...o){return u(Math.ceil(o.reduce((r,t)=>u(r).mul(t),u(1)).toNumber()))}export{e as BN,u as bn,I as max,g as multiply,d as toBytes,c as toHex,b as toNumber};
//# sourceMappingURL=index.mjs.map