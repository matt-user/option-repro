var kt=(r,e,t)=>{if(!e.has(r))throw TypeError("Cannot "+t)};var ot=(r,e,t)=>{if(e.has(r))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(r):e.set(r,t)};var it=(r,e,t)=>(kt(r,e,"access private method"),t);import{hexlify as At}from"@ethersproject/bytes";import{NativeAssetId as ct}from"@fuel-ts/constants";import{bn as Pt}from"@fuel-ts/math";var M=r=>{var a,n;let e,t;return Array.isArray(r)?(t=r[0],e=(a=r[1])!=null?a:ct):(t=r.amount,e=(n=r.assetId)!=null?n:ct),{assetId:At(e),amount:Pt(t)}};import i from"graphql-tag";var ut=(t=>(t.Spent="SPENT",t.Unspent="UNSPENT",t))(ut||{});var R=i`
  fragment transactionFragment on Transaction {
    id
    rawPayload
    status {
      type: __typename
      ... on SubmittedStatus {
        time
      }
      ... on SuccessStatus {
        block {
          id
        }
        time
        programState {
          returnType
          data
        }
      }
      ... on FailureStatus {
        block {
          id
        }
        time
        reason
      }
    }
  }
`,pt=i`
  fragment receiptFragment on Receipt {
    data
    rawPayload
  }
`,X=i`
  fragment coinFragment on Coin {
    utxoId
    owner
    amount
    assetId
    maturity
    status
    blockCreated
  }
`,lt=i`
  fragment balanceFragment on Balance {
    owner
    amount
    assetId
  }
`,w=i`
  fragment blockFragment on Block {
    id
    height
    producer
    transactions {
      id
    }
    time
  }
`,Mt=i`
  fragment chainInfoFragment on ChainInfo {
    name
    baseChainHeight
    peerCount
    consensusParameters {
      gasPriceFactor
      maxGasPerTx
      maxGasPerTx
      maxScriptLength
    }
    latestBlock {
      ...blockFragment
    }
  }
  ${w}
`,wt=i`
  query getVersion {
    nodeInfo {
      nodeVersion
    }
  }
`,Qt=i`
  query getInfo {
    nodeInfo {
      nodeVersion
      minGasPrice
    }
  }
`,Lt=i`
  query getChain {
    chain {
      ...chainInfoFragment
    }
  }
  ${Mt}
`,Dt=i`
  query getTransaction($transactionId: TransactionId!) {
    transaction(id: $transactionId) {
      ...transactionFragment
    }
  }
  ${R}
`,Ot=i`
  query getTransactionWithReceipts($transactionId: TransactionId!) {
    transaction(id: $transactionId) {
      ...transactionFragment
      receipts {
        ...receiptFragment
      }
    }
  }
  ${R}
  ${pt}
`,$t=i`
  query getTransactions($after: String, $before: String, $first: Int, $last: Int) {
    transactions(after: $after, before: $before, first: $first, last: $last) {
      edges {
        node {
          ...transactionFragment
        }
      }
    }
  }
  ${R}
`,Ft=i`
  query getTransactionsByOwner(
    $owner: Address!
    $after: String
    $before: String
    $first: Int
    $last: Int
  ) {
    transactionsByOwner(owner: $owner, after: $after, before: $before, first: $first, last: $last) {
      edges {
        node {
          ...transactionFragment
        }
      }
    }
  }
  ${R}
`,Ut=i`
  query getBlock($blockId: BlockId, $blockHeight: U64) {
    block(id: $blockId, height: $blockHeight) {
      ...blockFragment
    }
  }
  ${w}
`,Et=i`
  query getBlockWithTransactions($blockId: BlockId, $blockHeight: U64) {
    block(id: $blockId, height: $blockHeight) {
      ...blockFragment
      transactions {
        ...transactionFragment
      }
    }
  }
  ${w}
  ${R}
`,Vt=i`
  query getBlocks($after: String, $before: String, $first: Int, $last: Int) {
    blocks(after: $after, before: $before, first: $first, last: $last) {
      edges {
        node {
          ...blockFragment
        }
      }
    }
  }
  ${w}
`,Nt=i`
  query getCoin($coinId: UtxoId!) {
    coin(utxoId: $coinId) {
      ...coinFragment
    }
  }
  ${X}
`,Ht=i`
  query getCoins(
    $filter: CoinFilterInput!
    $after: String
    $before: String
    $first: Int
    $last: Int
  ) {
    coins(filter: $filter, after: $after, before: $before, first: $first, last: $last) {
      edges {
        node {
          ...coinFragment
        }
      }
    }
  }
  ${X}
`,Wt=i`
  query getCoinsToSpend(
    $owner: Address!
    $spendQuery: [SpendQueryElementInput!]!
    $maxInputs: Int
    $excludedIds: [UtxoId!]
  ) {
    coinsToSpend(
      owner: $owner
      spendQuery: $spendQuery
      maxInputs: $maxInputs
      excludedIds: $excludedIds
    ) {
      ...coinFragment
    }
  }
  ${X}
`,vt=i`
  query getContract($contractId: ContractId!) {
    contract(id: $contractId) {
      bytecode
      id
    }
  }
`,Kt=i`
  query getBalance($owner: Address!, $assetId: AssetId!) {
    balance(owner: $owner, assetId: $assetId) {
      ...balanceFragment
    }
  }
  ${lt}
`,Zt=i`
  query getBalances(
    $filter: BalanceFilterInput!
    $after: String
    $before: String
    $first: Int
    $last: Int
  ) {
    balances(filter: $filter, after: $after, before: $before, first: $first, last: $last) {
      edges {
        node {
          ...balanceFragment
        }
      }
    }
  }
  ${lt}
`,zt=i`
  mutation dryRun($encodedTransaction: HexString!, $utxoValidation: Boolean) {
    dryRun(tx: $encodedTransaction, utxoValidation: $utxoValidation) {
      ...receiptFragment
    }
  }
  ${pt}
`,Xt=i`
  mutation submit($encodedTransaction: HexString!) {
    submit(tx: $encodedTransaction) {
      id
    }
  }
`,Jt=i`
  mutation startSession {
    startSession
  }
`,jt=i`
  mutation endSession($sessionId: ID!) {
    endSession(id: $sessionId)
  }
`,Yt=i`
  mutation execute($sessionId: ID!, $op: String!) {
    execute(id: $sessionId, op: $op)
  }
`,te=i`
  mutation reset($sessionId: ID!) {
    reset(id: $sessionId)
  }
`,ee=(r,e,t)=>r();function yt(r,e=ee){return{getVersion(t,a){return e(n=>r.request(wt,t,{...a,...n}),"getVersion","query")},getInfo(t,a){return e(n=>r.request(Qt,t,{...a,...n}),"getInfo","query")},getChain(t,a){return e(n=>r.request(Lt,t,{...a,...n}),"getChain","query")},getTransaction(t,a){return e(n=>r.request(Dt,t,{...a,...n}),"getTransaction","query")},getTransactionWithReceipts(t,a){return e(n=>r.request(Ot,t,{...a,...n}),"getTransactionWithReceipts","query")},getTransactions(t,a){return e(n=>r.request($t,t,{...a,...n}),"getTransactions","query")},getTransactionsByOwner(t,a){return e(n=>r.request(Ft,t,{...a,...n}),"getTransactionsByOwner","query")},getBlock(t,a){return e(n=>r.request(Ut,t,{...a,...n}),"getBlock","query")},getBlockWithTransactions(t,a){return e(n=>r.request(Et,t,{...a,...n}),"getBlockWithTransactions","query")},getBlocks(t,a){return e(n=>r.request(Vt,t,{...a,...n}),"getBlocks","query")},getCoin(t,a){return e(n=>r.request(Nt,t,{...a,...n}),"getCoin","query")},getCoins(t,a){return e(n=>r.request(Ht,t,{...a,...n}),"getCoins","query")},getCoinsToSpend(t,a){return e(n=>r.request(Wt,t,{...a,...n}),"getCoinsToSpend","query")},getContract(t,a){return e(n=>r.request(vt,t,{...a,...n}),"getContract","query")},getBalance(t,a){return e(n=>r.request(Kt,t,{...a,...n}),"getBalance","query")},getBalances(t,a){return e(n=>r.request(Zt,t,{...a,...n}),"getBalances","query")},dryRun(t,a){return e(n=>r.request(zt,t,{...a,...n}),"dryRun","mutation")},submit(t,a){return e(n=>r.request(Xt,t,{...a,...n}),"submit","mutation")},startSession(t,a){return e(n=>r.request(Jt,t,{...a,...n}),"startSession","mutation")},endSession(t,a){return e(n=>r.request(jt,t,{...a,...n}),"endSession","mutation")},execute(t,a){return e(n=>r.request(Yt,t,{...a,...n}),"execute","mutation")},reset(t,a){return e(n=>r.request(te,t,{...a,...n}),"reset","mutation")}}}import{arrayify as rt,hexlify as h}from"@ethersproject/bytes";import{AbiCoder as Ie}from"@fuel-ts/abi-coder";import{NativeAssetId as ht}from"@fuel-ts/constants";import{max as qe,bn as c,multiply as be}from"@fuel-ts/math";import{GAS_PRICE_FACTOR as xe,MAX_GAS_PER_TX as Rt,ReceiptType as Bt,ReceiptCoder as fe,TransactionCoder as _t}from"@fuel-ts/transactions";import{GraphQLClient as Ge}from"graphql-request";import Te from"lodash.clonedeep";import{arrayify as I,hexlify as x}from"@ethersproject/bytes";import{ZeroBytes32 as J}from"@fuel-ts/constants";import{bn as ae,toNumber as Q}from"@fuel-ts/math";import{InputType as L}from"@fuel-ts/transactions";var dt=r=>{var e,t,a;switch(r.type){case L.Coin:{let n=I((e=r.predicate)!=null?e:"0x"),s=I((t=r.predicateData)!=null?t:"0x");return{type:L.Coin,utxoID:{transactionId:x(I(r.id).slice(0,32)),outputIndex:I(r.id)[32]},owner:x(r.owner),amount:ae(r.amount),assetId:x(r.assetId),txPointer:{blockHeight:Q(I(r.txPointer).slice(0,8)),txIndex:Q(I(r.txPointer).slice(8,16))},witnessIndex:r.witnessIndex,maturity:(a=r.maturity)!=null?a:0,predicateLength:n.length,predicateDataLength:s.length,predicate:x(n),predicateData:x(s)}}case L.Contract:return{type:L.Contract,utxoID:{transactionId:J,outputIndex:0},balanceRoot:J,stateRoot:J,txPointer:{blockHeight:Q(I(r.txPointer).slice(0,8)),txIndex:Q(I(r.txPointer).slice(8,16))},contractID:x(r.contractId)};default:throw new Error("Invalid Input type")}};import{hexlify as q}from"@ethersproject/bytes";import{ZeroBytes32 as D}from"@fuel-ts/constants";import{bn as O}from"@fuel-ts/math";import{OutputType as d}from"@fuel-ts/transactions";var mt=r=>{switch(r.type){case d.Coin:return{type:d.Coin,to:q(r.to),amount:O(r.amount),assetId:q(r.assetId)};case d.Contract:return{type:d.Contract,inputIndex:r.inputIndex,balanceRoot:D,stateRoot:D};case d.Withdrawal:return{type:d.Withdrawal,to:q(r.to),amount:O(r.amount),assetId:q(r.assetId)};case d.Change:return{type:d.Change,to:q(r.to),amount:O(0),assetId:q(r.assetId)};case d.Variable:return{type:d.Variable,to:D,amount:O(0),assetId:D};case d.ContractCreated:return{type:d.ContractCreated,contractId:q(r.contractId),stateRoot:q(r.stateRoot)};default:throw new Error("Invalid Output type")}};import{arrayify as f,hexlify as G}from"@ethersproject/bytes";import{addressify as _,Address as le}from"@fuel-ts/address";import{NativeAssetId as xt,ZeroBytes32 as Y}from"@fuel-ts/constants";import{bn as U}from"@fuel-ts/math";import{TransactionType as T,TransactionCoder as ye,InputType as k,OutputType as m,GAS_PRICE_FACTOR as de}from"@fuel-ts/transactions";import{sha256 as re}from"@ethersproject/sha2";import{ZeroBytes32 as b}from"@fuel-ts/constants";import{bn as $}from"@fuel-ts/math";import{ReceiptType as gt,InputType as ne,OutputType as j,TransactionType as St,TransactionCoder as se}from"@fuel-ts/transactions";var oe=r=>{let e={...r};switch(e.type){case St.Script:{e.receiptsRoot=b;break}case St.Create:break;default:throw new Error("Not implemented")}return e.inputs=e.inputs.map(t=>t.type===ne.Contract?{...t,utxoID:{transactionId:b,outputIndex:0},balanceRoot:b,stateRoot:b}:t),e.outputs=e.outputs.map(t=>{switch(t.type){case j.Contract:return{...t,balanceRoot:b,stateRoot:b};case j.Change:return{...t,amount:$(0)};case j.Variable:return{...t,to:b,amount:$(0),assetId:b};default:return t}}),e},Ye=r=>{let e=oe(r),t=new se().encode(e);return re(t)},F=(r,e,t)=>$(Math.ceil(r.toNumber()/t.toNumber())*e.toNumber()),B=r=>{let e=r.find(t=>t.type===gt.ScriptResult);return e&&e.type===gt.ScriptResult?e.gasUsed:$(0)};import{hexlify as It,arrayify as ie}from"@ethersproject/bytes";var ce=r=>{let e=new Uint8Array(32);return e.set(ie(r)),e},qt=r=>{let e,t;return Array.isArray(r)?(e=r[0],t=r[1]):(e=r.key,t=r.value),{key:It(e),value:It(ce(t))}};import{arrayify as ue,hexlify as pe}from"@ethersproject/bytes";var bt=r=>{let e=ue(r);return{data:pe(e),dataLength:e.length}};var ft={bytes:f("0x24000000"),encodeScriptData:()=>new Uint8Array(0)},tt=class extends Error{constructor(){super(...arguments);this.name="ChangeOutputCollisionError";this.message='A ChangeOutput with the same "assetId" already exists for a different "to" address'}},et=class extends Error{constructor(t){super();this.index=t;this.name="NoWitnessAtIndexError";this.message=`Witness at index "${t}" was not found`}},at=class extends Error{constructor(t){super();this.owner=t;this.name="NoWitnessByOwnerError";this.message=`A witness for the given owner "${t}" was not found`}},E=class{constructor({gasPrice:e,gasLimit:t,maturity:a,inputs:n,outputs:s,witnesses:o}={}){this.inputs=[];this.outputs=[];this.witnesses=[];this.gasPrice=U(e!=null?e:0),this.gasLimit=U(t!=null?t:0),this.maturity=a!=null?a:0,this.inputs=[...n!=null?n:[]],this.outputs=[...s!=null?s:[]],this.witnesses=[...o!=null?o:[]]}getBaseTransaction(){var n,s,o,u,S,g;let e=(s=(n=this.inputs)==null?void 0:n.map(dt))!=null?s:[],t=(u=(o=this.outputs)==null?void 0:o.map(mt))!=null?u:[],a=(g=(S=this.witnesses)==null?void 0:S.map(bt))!=null?g:[];return{gasPrice:this.gasPrice,gasLimit:this.gasLimit,maturity:this.maturity,inputs:e,outputs:t,witnesses:a,inputsCount:e.length,outputsCount:t.length,witnessesCount:a.length}}toTransactionBytes(){return new ye().encode(this.toTransaction())}pushInput(e){return this.inputs.push(e),this.inputs.length-1}pushOutput(e){return this.outputs.push(e),this.outputs.length-1}createWitness(){return this.witnesses.push("0x"),this.witnesses.length-1}updateWitness(e,t){if(!this.witnesses[e])throw new et(e);this.witnesses[e]=t}getCoinInputs(){return this.inputs.filter(e=>e.type===k.Coin)}getCoinOutputs(){return this.outputs.filter(e=>e.type===m.Coin)}getChangeOutputs(){return this.outputs.filter(e=>e.type===m.Change)}getCoinInputWitnessIndexByOwner(e){var a,n;let t=_(e);return(n=(a=this.inputs.find(s=>s.type===k.Coin&&s.owner===t.toB256()))==null?void 0:a.witnessIndex)!=null?n:null}updateWitnessByCoinInputOwner(e,t){let a=this.getCoinInputWitnessIndexByOwner(e);if(!a)throw new at(_(e));this.updateWitness(a,t)}addCoin(e){let t=this.getCoinInputWitnessIndexByOwner(le.fromB256(e.owner));typeof t!="number"&&(t=this.createWitness()),this.pushInput({type:k.Coin,...e,witnessIndex:t,txPointer:"0x00000000000000000000000000000000"});let a=this.getChangeOutputs().find(n=>G(n.assetId)===e.assetId);if(a&&G(a.to)!==e.owner)throw new tt;a||this.pushOutput({type:m.Change,to:e.owner,assetId:e.assetId})}addCoins(e){e.forEach(t=>this.addCoin(t))}addCoinOutput(e,t,a=xt){this.pushOutput({type:m.Coin,to:_(e).toB256(),amount:t,assetId:a})}addCoinOutputs(e,t){t.map(M).forEach(a=>{this.pushOutput({type:m.Coin,to:_(e).toB256(),amount:a.amount,assetId:a.assetId})})}byteSize(){return this.toTransactionBytes().length}chargeableByteSize(){let e=this.witnesses.reduce((t,a)=>t+f(a).length,0);return U(this.toTransactionBytes().length-e)}calculateFee(){let e=F(this.gasLimit,this.gasPrice,de);return{assetId:xt,amount:e.isZero()?U(1):e}}},C=class extends E{constructor({script:t,scriptData:a,...n}={}){super(n);this.type=T.Script;this.script=f(t!=null?t:ft.bytes),this.scriptData=f(a!=null?a:ft.encodeScriptData())}static from(t){return t instanceof this?t:new this(t)}toTransaction(){var n,s;let t=f((n=this.script)!=null?n:"0x"),a=f((s=this.scriptData)!=null?s:"0x");return{type:T.Script,...super.getBaseTransaction(),scriptLength:t.length,scriptDataLength:a.length,receiptsRoot:Y,script:G(t),scriptData:G(a)}}getContractInputs(){return this.inputs.filter(t=>t.type===k.Contract)}getContractOutputs(){return this.outputs.filter(t=>t.type===m.Contract)}getVariableOutputs(){return this.outputs.filter(t=>t.type===m.Variable)}setScript(t,a){this.script=t.bytes,this.scriptData=t.encodeScriptData(a),this.bytesOffset===void 0&&(this.bytesOffset=this.scriptData.byteLength)}addVariableOutputs(t=1){let a=t;for(;a;)this.pushOutput({type:m.Variable}),a-=1;return this.outputs.length-1}addContract(t){let a=_(t);if(this.getContractInputs().find(s=>s.contractId===a.toB256()))return;let n=super.pushInput({type:k.Contract,contractId:a.toB256(),txPointer:"0x00000000000000000000000000000000"});this.pushOutput({type:m.Contract,inputIndex:n})}},V=class extends E{constructor({bytecodeWitnessIndex:t,salt:a,storageSlots:n,...s}={}){super(s);this.type=T.Create;this.bytecodeWitnessIndex=t!=null?t:0,this.salt=G(a!=null?a:Y),this.storageSlots=[...n!=null?n:[]]}static from(t){return t instanceof this?t:new this(t)}toTransaction(){var s,o;let t=this.getBaseTransaction(),a=this.bytecodeWitnessIndex,n=(o=(s=this.storageSlots)==null?void 0:s.map(qt))!=null?o:[];return{type:T.Create,...t,bytecodeLength:t.witnesses[a].dataLength/4,bytecodeWitnessIndex:a,storageSlotsCount:n.length,salt:this.salt?G(this.salt):Y,storageSlots:n}}getContractCreatedOutputs(){return this.outputs.filter(t=>t.type===m.ContractCreated)}addContractCreatedOutput(t,a){this.pushOutput({type:m.ContractCreated,contractId:t,stateRoot:a})}},N=r=>{if(r instanceof C||r instanceof V)return r;switch(r.type){case T.Script:return C.from(r);case T.Create:return V.from(r);default:throw new Error(`Unknown transaction type: ${r.type}`)}};import{arrayify as me}from"@ethersproject/bytes";import{bn as ge}from"@fuel-ts/math";import{ReceiptType as Gt,ReceiptCoder as Se}from"@fuel-ts/transactions";var Tt=r=>{let e=new Se().decode(me(r.rawPayload),0)[0];switch(e.type){case Gt.ReturnData:return{...e,data:r.data};case Gt.LogData:return{...e,data:r.data};default:return e}},W,Ct,H=class{constructor(e,t,a){ot(this,W);this.gasUsed=ge(0);this.id=e,this.request=t,this.provider=a}async waitForResult(){var t;let e=await it(this,W,Ct).call(this);switch((t=e.status)==null?void 0:t.type){case"SubmittedStatus":throw new Error("Not yet implemented");case"FailureStatus":{let a=e.receipts.map(Tt);return this.gasUsed=B(a),{status:{type:"failure",reason:e.status.reason},receipts:a,transactionId:this.id,blockId:e.status.block.id,time:e.status.time}}case"SuccessStatus":{let a=e.receipts.map(Tt);return this.gasUsed=B(a),{status:{type:"success",programState:e.status.programState},receipts:a,transactionId:this.id,blockId:e.status.block.id,time:e.status.time}}default:throw new Error("Invalid Transaction status")}}async wait(){let e=await this.waitForResult();if(e.status.type==="failure")throw new Error(`Transaction failed: ${e.status.reason}`);return e}};W=new WeakSet,Ct=async function(){let{transaction:e}=await this.provider.operations.getTransactionWithReceipts({transactionId:this.id});if(!e)throw new Error("No Transaction was received from the client.");return e};var Ce=r=>{let e=new fe().decode(rt(r.rawPayload),0)[0];switch(e.type){case Bt.ReturnData:return{...e,data:r.data};case Bt.LogData:return{...e,data:r.data};default:return e}},he=r=>({name:r.name,baseChainHeight:c(r.baseChainHeight),peerCount:r.peerCount,consensusParameters:{gasPriceFactor:c(r.consensusParameters.gasPriceFactor),maxGasPerTx:c(r.consensusParameters.maxGasPerTx),maxScriptLength:c(r.consensusParameters.maxScriptLength)},latestBlock:{id:r.latestBlock.id,height:c(r.latestBlock.height),producer:r.latestBlock.producer,time:r.latestBlock.time,transactions:r.latestBlock.transactions.map(e=>({id:e.id}))}}),Re=r=>({minGasPrice:c(r.minGasPrice),nodeVersion:r.nodeVersion}),v=class{constructor(e){this.url=e;let t=new Ge(e);this.operations=yt(t)}async getVersion(){let{nodeInfo:{nodeVersion:e}}=await this.operations.getVersion();return e}async getNetwork(){return{name:"fuelv2",chainId:3735928559}}async getBlockNumber(){let{chain:e}=await this.operations.getChain();return c(e.latestBlock.height,10)}async getNodeInfo(){let{nodeInfo:e}=await this.operations.getInfo();return Re(e)}async getChain(){let{chain:e}=await this.operations.getChain();return he(e)}async sendTransaction(e){let t=N(e),a=h(t.toTransactionBytes()),{gasUsed:n,minGasPrice:s}=await this.getTransactionCost(t,0);if(c(n).gt(c(t.gasLimit)))throw new Error(`gasLimit(${t.gasLimit}) is lower than the required (${n})`);if(c(s).gt(c(t.gasPrice)))throw new Error(`gasPrice(${t.gasPrice}) is lower than the required ${s}`);let{submit:{id:o}}=await this.operations.submit({encodedTransaction:a});return new H(o,t,this)}async call(e,{utxoValidation:t}={}){let a=N(e),n=h(a.toTransactionBytes()),{dryRun:s}=await this.operations.dryRun({encodedTransaction:n,utxoValidation:t||!1});return{receipts:s.map(Ce)}}async getTransactionCost(e,t=.2){let a=N(Te(e)),{minGasPrice:n}=await this.getNodeInfo(),s=qe(a.gasPrice,n),o=1+t;a.gasLimit=Rt,a.gasPrice=c(0);let{receipts:u}=await this.call(a),S=be(B(u),o),g=F(S,s,xe);return{minGasPrice:n,gasPrice:s,gasUsed:S,fee:g}}async getCoins(e,t,a){return(await this.operations.getCoins({first:10,...a,filter:{owner:e.toB256(),assetId:t&&h(t)}})).coins.edges.map(o=>o.node).map(o=>({id:o.utxoId,assetId:o.assetId,amount:c(o.amount),owner:o.owner,status:o.status,maturity:c(o.maturity).toNumber(),blockCreated:c(o.blockCreated)}))}async getCoinsToSpend(e,t,a,n){return(await this.operations.getCoinsToSpend({owner:e.toB256(),spendQuery:t.map(M).map(u=>({assetId:h(u.assetId),amount:u.amount.toString(10)})),maxInputs:a,excludedIds:n==null?void 0:n.map(u=>h(u))})).coinsToSpend.map(u=>({id:u.utxoId,status:u.status,assetId:u.assetId,amount:c(u.amount),owner:u.owner,maturity:c(u.maturity).toNumber(),blockCreated:c(u.blockCreated)}))}async getBlock(e){let t;typeof e=="number"?t={blockHeight:c(e).toString(10)}:e==="latest"?t={blockHeight:(await this.getBlockNumber()).toString(10)}:t={blockId:c(e).toString(10)};let{block:a}=await this.operations.getBlock(t);return a?{id:a.id,height:c(a.height),time:a.time,producer:a.producer,transactionIds:a.transactions.map(n=>n.id)}:null}async getBlockWithTransactions(e){let t;typeof e=="number"?t={blockHeight:c(e).toString(10)}:e==="latest"?t={blockHeight:(await this.getBlockNumber()).toString()}:t={blockId:e};let{block:a}=await this.operations.getBlockWithTransactions(t);return a?{id:a.id,height:c(a.height,10),time:a.time,producer:a.producer,transactionIds:a.transactions.map(n=>n.id),transactions:a.transactions.map(n=>{var s;return(s=new _t().decode(rt(n.rawPayload),0))==null?void 0:s[0]})}:null}async getTransaction(e){var a;let{transaction:t}=await this.operations.getTransaction({transactionId:e});return t?(a=new _t().decode(rt(t.rawPayload),0))==null?void 0:a[0]:null}async getContract(e){let{contract:t}=await this.operations.getContract({contractId:e});return t||null}async getBalance(e,t){let{balance:a}=await this.operations.getBalance({owner:e.toB256(),assetId:h(t)});return c(a.amount,10)}async getBalances(e,t){return(await this.operations.getBalances({first:10,...t,filter:{owner:e.toB256()}})).balances.edges.map(s=>s.node).map(s=>({assetId:s.assetId,amount:c(s.amount)}))}async buildSpendPredicate(e,t,a,n,s=ht,o,u){let S=await this.getCoinsToSpend(e.address,[[t,s]]),g={fundTransaction:!0,...o},y=new C({gasLimit:Rt,...g}),K;n&&e.types&&(K=new Ie().encode(e.types,n));let Z=S.reduce((P,st)=>(y.addCoin({...st,predicate:e.bytes,predicateData:K}),y.outputs=[],P.add(st.amount)),c(0));y.addCoinOutput(a,Z,s);let z=[];if(g.fundTransaction&&z.push(y.calculateFee()),z.length&&u){let P=await this.getCoinsToSpend(u,z);y.addCoins(P)}return y}async submitSpendPredicate(e,t,a,n,s=ht,o,u){var g;let S=await this.buildSpendPredicate(e,t,a,n,s,o,u);try{return await(await this.sendTransaction(S)).waitForResult()}catch(y){throw(((g=y==null?void 0:y.response)==null?void 0:g.errors)||[]).some(({message:Z})=>Z.includes("unexpected block execution error TransactionValidity(InvalidPredicate"))?new Error("Invalid Predicate"):y}}};import{arrayify as Be}from"@ethersproject/bytes";import{StringCoder as _e}from"@fuel-ts/abi-coder";import{ReceiptType as nt}from"@fuel-ts/transactions";var A=class{constructor(e){this.logs=e.filter(({type:t})=>t===nt.Log||t===nt.LogData)}toArray(){return this.logs.map(e=>{if(e.type===nt.LogData){let a=new _e(Number(e.len)).decode(Be(e.data),0)[0];return a=a.replaceAll("\0",""),`${a}`}return`${e.val0}`})}print(){return this.toArray().map((e,t)=>`[log ${t}] ${e}`).join(`
`)}toString(){return this.print()}static debug(e){let t=new A(e);console.log(t.print())}},ke=A;export{tt as ChangeOutputCollisionError,ut as CoinStatus,V as CreateTransactionRequest,ke as LogReader,et as NoWitnessAtIndexError,at as NoWitnessByOwnerError,v as Provider,C as ScriptTransactionRequest,H as TransactionResponse,T as TransactionType,F as calculatePriceWithFactor,M as coinQuantityfy,B as getGasUsedFromReceipts,oe as getSignableTransaction,Ye as getTransactionId,dt as inputify,mt as outputify,ft as returnZeroScript,N as transactionRequestify};
//# sourceMappingURL=index.mjs.map